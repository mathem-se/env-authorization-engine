version: 0.2

environment_variables:
  plaintext:
    DOCKER_REPOSITORY_NAME: env-authorization-repository
    AUTHORIZATION_ENGINE_CONTAINER: env-authorization-engine
    SAM_CLI_TELEMETRY: 0

phases:
  build:
    commands:
      - aws ecr create-repository --repository-name ${DOCKER_REPOSITORY_NAME} || true --image-tag-mutability IMMUTABLE --image-scanning-configuration scanOnPush=true
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      - docker build -t ${AUTHORIZATION_ENGINE_CONTAINER} .
      - docker tag ${AUTHORIZATION_ENGINE_CONTAINER}:latest ${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${DOCKER_REPOSITORY_NAME}:${AUTHORIZATION_ENGINE_CONTAINER}
      - docker push ${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${DOCKER_REPOSITORY_NAME}:${AUTHORIZATION_ENGINE_CONTAINER}
      # Start OpenFGA:
      - docker run --name ${AUTHORIZATION_ENGINE_CONTAINER} -p 3000:3000 -p 8080:8080 -p 8081:8081 openfga/openfga run #\ --datastore-engine postgres \ --datastore-uri 'postgres://postgres:password@postgres:5432/postgres?sslmode=disable'
