name: "Deploy"
description: "Deploy..."

inputs:
  DOMAIN:
    required: true
  OWNER:
    required: true
  TEAM:
    required: true
  AWS_ACCOUNT:
    required: true
  AWS_DEPLOY_REGION:
    required: true
  AWS_API_REGION:
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ inputs.AWS_ACCOUNT }}:role/github-actions
        role-session-name: github-actions-oidc-session
        aws-region: ${{ inputs.AWS_API_REGION }}
    - name: Push docker image to ECR
      shell: bash
      run: |
        aws ecr create-repository --repository-name ${{ github.event.repository.name }} || true --image-tag-mutability IMMUTABLE --image-scanning-configuration scanOnPush=true
        aws ecr get-login-password --region ${{ inputs.AWS_DEPLOY_REGION }} | docker login --username AWS --password-stdin ${{ inputs.AWS_ACCOUNT }}.dkr.ecr.${{ inputs.AWS_DEPLOY_REGION }}.amazonaws.com
        docker build -t env-authorization-engine-container .
        docker tag env-authorization-engine-container:latest  ${{ inputs.AWS_ACCOUNT }}.dkr.ecr.${{ inputs.AWS_DEPLOY_REGION }}.amazonaws.com/${{ github.event.repository.name }}:env-authorization-engine-container
        docker push  ${{ inputs.AWS_ACCOUNT }}.dkr.ecr.${{ inputs.AWS_DEPLOY_REGION }}.amazonaws.com/${{ github.event.repository.name }}:env-authorization-engine-container
    - name: Deploy
      shell: bash
      run: |
        sam build --beta-features --parallel \
        --config-file ./samconfig.toml

        sam deploy \
        --no-confirm-changeset \
        --no-fail-on-empty-changeset \
        --stack-name ${{ github.event.repository.name }} \
        --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
        --region ${{ inputs.AWS_DEPLOY_REGION  }} \
        --s3-prefix ${{ github.event.repository.name }} \
        --resolve-s3 \
        --config-file ./samconfig.toml
